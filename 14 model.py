#Задача 1
#Дано натуральное число N. Вычислите сумму его цифр.
#При решении этой задачи нельзя использовать строки, списки, массивы и циклы.
#Пример:
#При N = 279 ответ будет 18

def sum(n):
   if n < 10:
      return n
   else:
      return n % 10 + sum(n // 10)

print(sum(123))

#Задача 2
#Дано натуральное число N. Выведите слово YES, если число N
# является точной степенью двойки, или слово NO в противном случае.
#Операцией возведения в степень пользоваться нельзя.
#Числами степени двойки являются 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024 и так далее

def number_(n):
   if n == 2:
      return "Yes"
   elif n < 2:
      return "No"
   else:
      return number_(n // 2)

print(number_(32))


#Задача 3 (прикольная очень, откопал только что, правда),
# может быть пока сложновато, но попробуй В теории вычислимости важную
# роль играет функция Аккермана A(m,n), определенная следующим образом (смотри картинку)
#Даны два целых неотрицательных числа m и n, каждое в отдельной строке. Выведите A(m,n).

def akkerman(m, n):
    if m == 0:
        return n + 1
    elif m > 0 and n == 0:
        return akkerman(m - 1, 1)
    elif m > 0 and n > 0:
        return akkerman(m - 1, akkerman(m, n - 1))


print(round(akkerman(2, 1)))